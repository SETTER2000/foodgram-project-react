version: '3.8'

services:
  postgres:
    image: postgres:13.3
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.postgres

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - frontend_data:/app/result_build/
    depends_on:
      - postgres

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    expose:
      - 8000
    restart: always
    volumes:
      - static_value:/code/backend_static/
      - media_value:/code/backend_media/
    env_file:
      - ./.envs/.postgres
      - ./.envs/.django
    depends_on:
      - postgres

  migrations:
    build:
      context: ../backend
      dockerfile: Dockerfile
    volumes:
      - static_value:/code/backend_static/
      - media_value:/code/backend_media/
    command: >
<<<<<<< HEAD:infra/develop.yaml
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
=======
      sh -c "python manage.py makemigrations --noinput &&
             python manage.py migrate --noinput &&
>>>>>>> dev:docker-compose.yaml
             python manage.py collectstatic --noinput &&
             python manage.py loaddata data/data.json"
    depends_on:
      - backend
    env_file:
      - ./.envs/.postgres
      - ./.envs/.django

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
<<<<<<< HEAD:infra/develop.yaml
      - ./develop.conf:/etc/nginx/conf.d/default.conf
      - ../docs/redoc.html:/usr/share/nginx/html/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/docs/openapi-schema.yml
=======
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - frontend_data:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/foodgram/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/foodgram/docs/openapi-schema.yml
>>>>>>> dev:docker-compose.yaml
      - static_value:/code/backend_static/
      - media_value:/code/backend_media/
      - ../frontend/build:/usr/share/nginx/html/
    depends_on:
      - postgres
      - backend
      - frontend

volumes:
  postgres_data:
  frontend_data:
  static_value:
  media_value:
