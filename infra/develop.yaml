version: '3.8'

services:
  postgres:
    image: postgres:13.3
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.postgres

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/api/result_build/
    depends_on:
      - postgres

  backend:
<<<<<<< HEAD:infra/develop.yaml
    build:
      context: ../backend
      dockerfile: Dockerfile
    expose:
      - 8000
=======
    image: setter2000/foodgramback:latest
#    build:
#      dockerfile: ./backend/Dockerfile
#      context: .
>>>>>>> olga:docker-compose.yaml
    restart: always
    volumes:
      - static_value:/code/backend/static/
      - media_value:/code/backend/media/
    env_file:
      - ./.envs/.postgres
      - ./.envs/.django
    depends_on:
      - postgres

  migrations:
<<<<<<< HEAD:infra/develop.yaml
    build:
      context: ../backend
      dockerfile: Dockerfile
=======
#    image: foodgram-project-react_backend
    image: setter2000/foodgramback:latest
>>>>>>> olga:docker-compose.yaml
    volumes:
      - .:/backend/
    command: >
      sh -c "python manage.py makemigrations --noinput &&
             python manage.py migrate --noinput &&
<<<<<<< HEAD:infra/develop.yaml
             python manage.py collectstatic --noinput &&
             python manage.py loaddata data/data.json"
    depends_on:
      - backend
    env_file:
      - ./.envs/.postgres
      - ./.envs/.django
=======
             python manage.py loaddata data/tag.json &&
             python manage.py loaddata data/ingredient.json &&
             python manage.py loaddata data/users.json"
    env_file:
      - ./.envs/.postgres
      - ./.envs/.django
    depends_on:
      - nginx
>>>>>>> olga:docker-compose.yaml

  nginx:
    image: nginx:1.19.3
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
<<<<<<< HEAD:infra/develop.yaml
      - frontend_data:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/foodgram/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/foodgram/docs/openapi-schema.yml
=======
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    restart: always
>>>>>>> olga:docker-compose.yaml
    depends_on:
      - postgres
      - backend
      - frontend

volumes:
  postgres_data:
  static_value:
  media_value:
<<<<<<< HEAD:infra/develop.yaml
=======
  result_build:
>>>>>>> olga:docker-compose.yaml
