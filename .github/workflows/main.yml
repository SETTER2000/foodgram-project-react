name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r backend/requirements.txt

      - name: Test with flake8 and django tests
        run: |
          python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./backend/Dockerfile
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgramback:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgramback
            sudo docker stop $(sudo docker ps -a -q)
            rm -rf .envs/.postgres .envs/.django
            touch .envs/.postgres
            touch .envs/.django

            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .envs/.postgres
            echo DB_HOST=${{ secrets.DB_HOST }} >> .envs/.postgres
            echo DB_PORT=${{ secrets.DB_PORT }} >> .envs/.postgres

            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .envs/.postgres
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .envs/.postgres
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .envs/.postgres

            echo FONT_PDF=${{ secrets.FONT_PDF }} >> .envs/.django
            echo SUB_DIR_RECIPES=${{ secrets.SUB_DIR_RECIPES }} >> .envs/.django
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .envs/.django
            echo DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }} >> .envs/.django
            sudo docker-compose  up --build -d —-no-cache
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!