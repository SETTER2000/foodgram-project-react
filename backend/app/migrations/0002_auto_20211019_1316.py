# Generated by Django 3.0.5 on 2021-10-19 10:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('image', models.CharField(help_text='Ссылка на картинку на сайте', max_length=200, verbose_name='Картинка рецепта')),
                ('cooking_time', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Время приготовления нужно заполнить.')], verbose_name='Время приготовления (в минутах)')),
            ],
            options={
                'verbose_name': 'Фаворит',
                'verbose_name_plural': 'Фавориты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Recipes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=None)),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('text', models.TextField(verbose_name='Описание')),
                ('cooking_time', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(1000, message='Время приготовления макс. 1000 мин.'), django.core.validators.MinValueValidator(1, message='Время приготовления нужно заполнить.')], verbose_name='Время приготовления (в минутах)')),
                ('author', models.ForeignKey(help_text='Пользователь составивший рецепт.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='автор')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(db_index=True, max_length=70, unique=True, verbose_name='Название тега')),
                ('color', models.CharField(max_length=7, unique=True, verbose_name='Цветовой HEX-код')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ('name',),
            },
        ),
        migrations.AlterModelOptions(
            name='ingredient',
            options={'ordering': ('name',), 'verbose_name': 'Ингредиент', 'verbose_name_plural': 'Ингредиенты'},
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='name',
            field=models.CharField(max_length=150, verbose_name='Ингредиент'),
        ),
        migrations.CreateModel(
            name='RecipesTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Recipes', verbose_name='Рецепт')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Tag', verbose_name='Тег')),
            ],
        ),
        migrations.CreateModel(
            name='RecipesIngredients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Количество нужно заполнить.')], verbose_name='Количество')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Ingredient', verbose_name='Ингредиент')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Recipes', verbose_name='Рецепт')),
            ],
            options={
                'unique_together': {('ingredient', 'recipe', 'amount')},
            },
        ),
        migrations.AddField(
            model_name='recipes',
            name='ingredients',
            field=models.ManyToManyField(through='app.RecipesIngredients', to='app.Ingredient'),
        ),
        migrations.AddField(
            model_name='recipes',
            name='is_favorited',
            field=models.ManyToManyField(blank=True, help_text='Представлен, лоигны пользователей, кто добавил этот рецепт себе в избранное.', related_name='favorite_recipe', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recipes',
            name='is_in_shopping_cart',
            field=models.ManyToManyField(blank=True, help_text='Показывать только рецепты, находящиеся в списке покупок.', related_name='shopping_recipe', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recipes',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='recipes', to='app.Tag'),
        ),
    ]
