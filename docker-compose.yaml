version: '3.8'

services:
  postgres:
    image: postgres:12.4
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.postgres

  frontend:
    image: raikhert/foodgramfront:latest
    volumes:
      - frontend_data:/app/result_build/
    depends_on:
      - postgres
  backend:
    image: setter2000/foodgramback:latest
    restart: always
    command: gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_value:/code/backend_static/
      - media_value:/code/backend_media/
    env_file:
      - ./.envs/.postgres
      - ./.envs/.django
  migrations:
    image: setter2000/foodgramback:latest
    volumes:
      - static_value:/code/backend_static/
      - media_value:/code/backend_media/
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py create admin &&
             python manage.py filldb"
    depends_on:
      - backend
    env_file:
      - ./.envs/.postgres
      - ./.envs/.django
  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - frontend_data:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/foodgram/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/foodgram/docs/openapi-schema.yml
      - static_value:/code/backend_static/
      - media_value:/code/backend_media
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  frontend_data:
  static_value:
  media_value: